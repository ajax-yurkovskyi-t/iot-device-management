name: Build

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

env:
  gradle_cmd: ./gradlew --parallel --build-cache
    -PAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    -PAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -Prepository=${{ secrets.PRIVATEMAVENREPO }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      issues: read
      pull-requests: write
      contents: read
      checks: write
      id-token: write

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start containers
        run: docker compose --profile test up -d

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}


      - name: Run gradle build
        run: ${gradle_cmd} build

      - name: Run Coverage Check
        if: ${{ !cancelled() && steps.diff-arg.outputs.gradle-arg }}
        continue-on-error: true
        shell: bash
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF"

      - name: Add Delta Coverage report
        continue-on-error: true
        uses: gw-kit/delta-coverage-plugin/actions/delta-coverage-report@2.5.0
        with:
          delta-coverage-report: build/reports/coverage-reports/delta-coverage/report.md

      - name: Append Coverage Summary
        continue-on-error: true
        uses: gw-kit/delta-coverage-action@main

      - name: Add Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.15.1
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        with:
          check_name: 'General Tests Report'
          files: '**/build/test-results/**/TEST-*.xml'

      - name: Create Check Run
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/check-runs \
               -d '{
                 "name": "Build Check",
                 "head_sha": "${{ github.event.pull_request.head.sha }}",
                 "status": "in_progress",
                 "output": {
                   "title": "Build is in progress",
                   "summary": "The build has started running."
                 }
               }'
    
