name: Build

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

env:
  gradle_cmd: ./gradlew --parallel --build-cache
    -PAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    -PAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -Prepository=${{ secrets.PRIVATEMAVENREPO }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      issues: read
      pull-requests: write
      contents: read
      checks: write

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start containers
        run: docker compose --profile test up -d

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Prepare PR-based Diff File
        id: diff-file
        if: ${{ github.event_name == 'pull_request' }}
        continue-on-error: true
        shell: bash
        env:
          OUTPUT_DIFF_FILE: 'diff.patch'
          DIFF_URL: 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}'
        run: |
          curl -sL --fail \
            -H "Accept: application/vnd.github.v3.diff" \
            -H "Authorization: token ${{ github.token }}" \
            ${{ env.DIFF_URL }} > ${{ env.OUTPUT_DIFF_FILE }}
          echo "path=${{ env.OUTPUT_DIFF_FILE }}" >> $GITHUB_OUTPUT

      - id: diff-arg
        uses: actions/github-script@v7
        with:
          script: |
            const outputName = 'gradle-arg';
            const diffFile = `${{ steps.diff-file.outputs.path }}`;
            const diffBase = `${{ inputs.base-branch || github.base_ref }}`;
            if (diffFile) {
              core.info('Chosen diff content from the PR.');
              // TODO: Backward compatibility. Could be removed when all projects will be updated to Delta-Coverage 3.0.0
              // TODO: replace with the next code: core.setOutput(outputName, `-PdiffFile=${diffFile}`);
              core.setOutput(outputName, `-PdiffFile=${diffFile} -PdiffBase=${diffBase}`);
            } else if (diffBase) {
              const completeDiffBase = `refs/remotes/origin/${diffBase}`;
              core.info(`Diff will be generated by Delta-Coverage comparing to '${completeDiffBase}'.`);
              core.setOutput(outputName, `-PdiffBase=${completeDiffBase}`);
            } else {
              core.warning('No diff file or base branch detected. Delta Coverage check will be skipped.');
            }

      - id: resolve-binary-files
        uses: actions/github-script@v7
        with:
          script: |
            const buildCoverageGradleArg = (argName, files) => {
                const patterns = files.split('\n')
                .map(it => it.trim())
                .filter(it => it.length !== 0)
                .join(',');
                return `${argName}='${patterns}'`;
            };
            const unitTestsPatterns = `${{ inputs.unit-coverage-files }}`;
            const intTestsPatterns = `${{ inputs.integration-coverage-files }}`;
            const filesArgs = {
              'testCoverageDataLocations': unitTestsPatterns,
              'integrationCoverageDataLocations': intTestsPatterns,
              'aggregatedCoverageDataLocations': [unitTestsPatterns, intTestsPatterns].join('\n')
            };
            let args = '';
            for (const key in filesArgs) {
              const files = filesArgs[key];
              if (files.trim().length !== 0) {
                args += '-P' + buildCoverageGradleArg(key, files) + ' ';
              } 
            }
            core.setOutput('coverage-files', args);    

      - name: Run gradle build
        run: ${gradle_cmd} build

      - name: Run Coverage Check
        if: ${{ !cancelled() && steps.diff-arg.outputs.gradle-arg }}
        continue-on-error: ${{ contains(github.event.pull_request.labels.*.name, 'suppress-delta-coverage') }}
        shell: bash
        run: ${gradle_cmd} deltaCoverage --continue
          ${{ steps.diff-arg.outputs.gradle-arg }}
          ${{ steps.resolve-binary-files.outputs.coverage-files }}

      - name: Add Delta Coverage report
        continue-on-error: true
        uses: gw-kit/delta-coverage-plugin/actions/delta-coverage-report@2.5.0
        with:
          delta-coverage-report: build/reports/coverage-reports/delta-coverage/report.md

      - name: Append Coverage Summary
        continue-on-error: true
        uses: gw-kit/delta-coverage-action@main









      - name: Add Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.15.1
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        with:
          check_name: 'General Tests Report'
          files: '**/build/test-results/**/TEST-*.xml'

      - name: Create Check Run
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/check-runs \
               -d '{
                 "name": "Build Check",
                 "head_sha": "${{ github.event.pull_request.head.sha }}",
                 "status": "in_progress",
                 "output": {
                   "title": "Build is in progress",
                   "summary": "The build has started running."
                 }
               }'
    
