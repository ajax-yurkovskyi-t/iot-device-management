name: Build

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

env:
  gradle_cmd: ./gradlew --parallel --build-cache
    -PAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    -PAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -Prepository=${{ secrets.PRIVATEMAVENREPO }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      issues: read
      pull-requests: write
      contents: read
      checks: write

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start containers
        run: docker compose --profile test up -d

      - name: Get Check Run Logs
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const checkRunId = '37794310970';  // Replace with your check run ID
            const response = await github.rest.checks.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: checkRunId
            });
            const logsUrl = response.data.output.annotations_url;
            info(`Check Run Logs URL: ${logsUrl}`);
              
            return response.data.output;
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Generate a token
        id: generate-app-token
        continue-on-error: true
        uses: actions/create-github-app-token@v1.9.3
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.JAVA_BACKEND_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Fetch PR Labels
        id: fetch-labels
        shell: 'bash'
        run: |
          LABELS=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} --jq '.labels[].name' || echo "")
          LABELS_CLEAN=$(echo "$LABELS" | tr '\n' ',' | sed 's/,$//')
          echo "labels=$LABELS_CLEAN" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ inputs.github-token }}

      - name: Check for Suppress Label
        id: check-label
        shell: 'bash'
        run: |
          if echo "$labels" | grep -q 'suppress-delta-coverage'; then
          echo "suppress_check_failures=true" >> $GITHUB_ENV
          else
          echo "suppress_check_failures=false" >> $GITHUB_ENV
          fi        
      

      - name: Run gradle build
        run: ${gradle_cmd} build

      - name: Run Delta Coverage check
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF"

      - name: Add Delta Coverage report
        continue-on-error: true
        uses: gw-kit/delta-coverage-plugin/actions/delta-coverage-report@2.4.0
        with:
          delta-coverage-report: build/reports/coverage-reports/delta-coverage/report.md

      - name: Append Coverage Summary
        if: ${{ !cancelled() }}
        continue-on-error: true
        uses:  ajax-yurkovskyi-t/delta-coverage-action@feature/dynamic-label-fetching

