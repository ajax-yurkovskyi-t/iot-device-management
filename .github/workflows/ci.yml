name: Build

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

env:
  gradle_cmd: ./gradlew --parallel --build-cache
    -PAWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
    -PAWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
    -Prepository=${{ secrets.PRIVATEMAVENREPO }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      issues: read
      pull-requests: write
      contents: read
      checks: write

    outputs:
      github-token: ${{ steps.generate-app-token.outputs.token }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start containers
        run: docker compose --profile test up -d

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Generate a token
        id: generate-app-token
        continue-on-error: true
        uses: actions/create-github-app-token@v1.9.3
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.JAVA_BACKEND_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Create Check Run for Coverage
        run: |
          CHECK_RUN_NAME="Deltasc coverage"
          CHECK_RUN_CONCLUSION="failure"
          CHECK_RUN_STATUS="completed"
          EXTERNAL_ID="ajax-delta-cov"
          CHECK_RUN_OUTPUT="Delta coverage check completed successfully\n\n<!-- This is Test Coverage CheckRun -->"

          INSTALLATION_TOKEN="${{ steps.generate-app-token.outputs.token }}"

          curl -X POST \
            -H "Authorization: token $INSTALLATION_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "name": "'"$CHECK_RUN_NAME"'",
              "head_sha": "${{ github.event.pull_request.head.sha }}",
              "status": "'"$CHECK_RUN_STATUS"'",
              "external_id": "'"$EXTERNAL_ID"'",
              "conclusion": "'"$CHECK_RUN_CONCLUSION"'",
              "output": {
                "title": "'"$CHECK_RUN_NAME"'",
                "summary": "'"$CHECK_RUN_OUTPUT"'"
              }
            }' \
            https://api.github.com/repos/${{ github.repository }}/check-runs
          

      - name: Create Check Run for Coverage
        run: |
          CHECK_RUN_NAME="Another Check Run"
          CHECK_RUN_CONCLUSION="success"
          CHECK_RUN_STATUS="completed"
          EXTERNAL_ID="another-check-run"
          CHECK_RUN_OUTPUT="Delta coverage check completed successfully\n\n<!-- This is Test Coverage CheckRun -->"

          INSTALLATION_TOKEN="${{ steps.generate-app-token.outputs.token }}"

          curl -X POST \
            -H "Authorization: token $INSTALLATION_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "name": "'"$CHECK_RUN_NAME"'",
              "head_sha": "${{ github.event.pull_request.head.sha }}",
              "status": "'"$CHECK_RUN_STATUS"'",
              "external_id": "'"$EXTERNAL_ID"'",
              "conclusion": "'"$CHECK_RUN_CONCLUSION"'",
              "output": {
                "title": "'"$CHECK_RUN_NAME"'",
                "summary": "'"$CHECK_RUN_OUTPUT"'"
              }
            }' \
            https://api.github.com/repos/${{ github.repository }}/check-runs    
          

      - name: Create Check Run for Coverage
        run: |
          CHECK_RUN_NAME="De coverage"
          CHECK_RUN_CONCLUSION="failure"
          CHECK_RUN_STATUS="completed"
          EXTERNAL_ID="ajax-delta-coverage"
          CHECK_RUN_OUTPUT="Delta coverage check completed successfully\n\n<!-- This is Test Coverage CheckRun -->"

          INSTALLATION_TOKEN="${{ steps.generate-app-token.outputs.token }}"

          curl -X POST \
            -H "Authorization: token $INSTALLATION_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "name": "'"$CHECK_RUN_NAME"'",
              "head_sha": "${{ github.event.pull_request.head.sha }}",
              "status": "'"$CHECK_RUN_STATUS"'",
              "external_id": "'"$EXTERNAL_ID"'",
              "conclusion": "'"$CHECK_RUN_CONCLUSION"'",
              "output": {
                "title": "'"$CHECK_RUN_NAME"'",
                "summary": "'"$CHECK_RUN_OUTPUT"'"
              }
            }' \
            https://api.github.com/repos/${{ github.repository }}/check-runs    
          

      - name: Run gradle build
        run: ${gradle_cmd} build -x test

      - name: Run Delta Coverage check
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF"

      - name: Add Delta Coverage report
        continue-on-error: true
        uses: gw-kit/delta-coverage-plugin/actions/delta-coverage-report@2.4.0
        with:
          delta-coverage-report: build/reports/coverage-reports/delta-coverage/report.md

      - name: Append Coverage Summary
        if: ${{ !cancelled() }}
        continue-on-error: true
        uses:  ajax-yurkovskyi-t/delta-coverage-action@feature/add-external-id-field
        with:
          github-token: ${{ steps.generate-app-token.outputs.token }}
          external-id: 'ajax-delta-coverage'

  ajax-ci-gate:
    if: always()
    uses: ajax-yurkovskyi-t/iot-device-management/.github/workflows/ajax-ci-gate.yaml@feature/delta-coverage-test
    secrets: inherit
    with:
      required-jobs: "${{ toJson(needs) }}"
    needs:
      - build